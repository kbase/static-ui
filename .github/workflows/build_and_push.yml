name: Build and Push Images

on:
  pull_request:
    branches:
      - develop
      - main
      - master
    types:
      - opened
      - reopened
      - synchronize
      - closed
jobs:
  build-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Run build
        env:
          PUBLIC_URL: '/'
          REACT_APP_AUTH_SERIVCE_URL: 'https://ci-europa.kbase.us/services/auth'
        run: npm install && npm run build
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: static-ui-build
          path: build/
  build-develop-open:
    if: github.base_ref == 'develop' && github.event.pull_request.merged == false
    runs-on: ubuntu-latest
    needs: build-artifacts
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: static-ui-build
          path: build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build without push
        uses: docker/build-push-action@v3
        with:
          context: .
          dockerfile: ./Dockerfile  # Specify the path to your Dockerfile
          push: false
  build-develop-merge:
    if: github.base_ref == 'develop' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: build-artifacts
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: static-ui-build
          path: build
      - name: Get current date
        id: date
        run: echo "date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          # note that the calling workflow must set `secrets: inherit`
          username: '${{ secrets.GHCR_USERNAME }}'
          password: '${{ secrets.GHCR_TOKEN }}'
      - name: Create github action tags from image tags
        id: tags
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const tags = '${{ inputs.tags }}'.split(',');
            const username = '${{ github.event.repository.owner.login }}';
            const repoName = '${{ inputs.name }}';
            return tags.map((tag) => {
              return `ghcr.io/${username}/${repoName}:${tag}`;
            }).join(',');
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          pull: true
          push: true
          build-args: |
            BUILD_DATE=${{ steps.date.outputs.date }}
            VCS_REF=${{ github.sha }}
            BRANCH='${{ github.ref }}'
            TAG='${{ github.ref }}'
          tags: '${{ steps.tags.outputs.result }}'



#  build-main-open:
#    if: (github.base_ref == 'main' || github.base_ref == 'master') && github.event.pull_request.merged == false
#    uses: kbase/.github/.github/workflows/reusable_build-push.yml@main
#    with:
#      name: '${{ github.event.repository.name }}'
#      tags: pr-${{ github.event.number }}
#    secrets: inherit
#  build-main-merge:
#    if: (github.base_ref == 'main' || github.base_ref == 'master') && github.event.pull_request.merged == true
#    uses: kbase/.github/.github/workflows/reusable_build-push.yml@main
#    with:
#      name: '${{ github.event.repository.name }}'
#      tags: pr-${{ github.event.number }},latest-rc
#    secrets: inherit
#  trivy-scans:
#    if: (github.base_ref == 'develop' || github.base_ref == 'main' || github.base_ref == 'master' ) && github.event.pull_request.merged == false
#    uses: kbase/.github/.github/workflows/reusable_trivy-scans.yml@main
#    secrets: inherit


